/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MeldListViewInHouseMeldServicer } from "./meldlistviewinhousemeldservicer";
import { MeldListViewInviteAssignment } from "./meldlistviewinviteassignment";
import { MeldListviewManagementAvailabilitySegment } from "./meldlistviewmanagementavailabilitysegment";
import { MeldListViewProperty } from "./meldlistviewproperty";
import { MeldListViewUnit } from "./meldlistviewunit";
import { OwnerApprovalStatusEnum } from "./ownerapprovalstatusenum";
import { PriorityEnum } from "./priorityenum";
import { Status5c6Enum } from "./status5c6enum";
import { StatusD0bEnum } from "./statusd0benum";
import { Tenant } from "./tenant";
import { VendorAssignmentRequest } from "./vendorassignmentrequest";
import { VendorAvailabilitySegment } from "./vendoravailabilitysegment";
import { WorkCategoryEnum } from "./workcategoryenum";
import { WriteableTag } from "./writeabletag";
import { Expose, Transform, Type } from "class-transformer";

export class MeldSerializerListManagementAgentCloser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "agent_preferences" })
    agentPreferences: number;

    @SpeakeasyMetadata()
    @Expose({ name: "contact" })
    contact?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "default_invoice_filter" })
    defaultInvoiceFilter?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "default_meld_filter" })
    defaultMeldFilter?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "first_name" })
    firstName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "last_name" })
    lastName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management" })
    management: number;

    @SpeakeasyMetadata()
    @Expose({ name: "new_notification_settings" })
    newNotificationSettings?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "property_groups" })
    propertyGroups: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: number;

    @SpeakeasyMetadata()
    @Expose({ name: "show_tour" })
    showTour?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: number;
}

export class MeldSerializerListManagementappointment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "availability_segment" })
    @Type(() => MeldListviewManagementAvailabilitySegment)
    availabilitySegment: MeldListviewManagementAvailabilitySegment;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    meld: number;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}

export class MeldSerializerListManagerCanceller extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "agent_preferences" })
    agentPreferences: number;

    @SpeakeasyMetadata()
    @Expose({ name: "contact" })
    contact?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "default_invoice_filter" })
    defaultInvoiceFilter?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "default_meld_filter" })
    defaultMeldFilter?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "first_name" })
    firstName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "last_name" })
    lastName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management" })
    management: number;

    @SpeakeasyMetadata()
    @Expose({ name: "new_notification_settings" })
    newNotificationSettings?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "property_groups" })
    propertyGroups: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: number;

    @SpeakeasyMetadata()
    @Expose({ name: "show_tour" })
    showTour?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: number;
}

export class MeldSerializerListMeldExpenditures extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    meld: number;

    @SpeakeasyMetadata()
    @Expose({ name: "notes" })
    notes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: StatusD0bEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}

export class MeldSerializerListVendorCloser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    address: number;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "excluded_property_groups" })
    excludedPropertyGroups: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "fax" })
    fax?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "managements" })
    managements: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}

export class MeldSerializerListVendorappointment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "assignment_request" })
    assignmentRequest: number;

    @SpeakeasyMetadata()
    @Expose({ name: "availability_segment" })
    @Type(() => VendorAvailabilitySegment)
    availabilitySegment: VendorAvailabilitySegment;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    meld: number;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}

export class MeldSerializerListOutput extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "assigned" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    assigned?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "assigner" })
    assigner: number;

    @SpeakeasyMetadata()
    @Expose({ name: "brief_description" })
    briefDescription: string;

    @SpeakeasyMetadata()
    @Expose({ name: "completion_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    completionDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "completion_notes" })
    completionNotes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "creator" })
    creator: number;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "due_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dueDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "has_pets" })
    hasPets?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "has_registered_tenant" })
    hasRegisteredTenant?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata({ elemType: MeldListViewInHouseMeldServicer })
    @Expose({ name: "in_house_servicers" })
    @Type(() => MeldListViewInHouseMeldServicer)
    inHouseServicers: MeldListViewInHouseMeldServicer[];

    @SpeakeasyMetadata({ elemType: MeldListViewInviteAssignment })
    @Expose({ name: "invite_assignments" })
    @Type(() => MeldListViewInviteAssignment)
    inviteAssignments: MeldListViewInviteAssignment[];

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "maintenance_notes" })
    maintenanceNotes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "management" })
    management: number;

    @SpeakeasyMetadata()
    @Expose({ name: "management_agent_closer" })
    @Type(() => MeldSerializerListManagementAgentCloser)
    managementAgentCloser: MeldSerializerListManagementAgentCloser;

    @SpeakeasyMetadata()
    @Expose({ name: "managementappointment" })
    @Type(() => MeldSerializerListManagementappointment)
    managementappointment: MeldSerializerListManagementappointment;

    @SpeakeasyMetadata()
    @Expose({ name: "manager_cancellation_reason" })
    managerCancellationReason?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "manager_cancelled" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    managerCancelled?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "manager_canceller" })
    @Type(() => MeldSerializerListManagerCanceller)
    managerCanceller: MeldSerializerListManagerCanceller;

    @SpeakeasyMetadata()
    @Expose({ name: "marked_complete" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    markedComplete?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "meld_expenditures" })
    @Type(() => MeldSerializerListMeldExpenditures)
    meldExpenditures: MeldSerializerListMeldExpenditures;

    @SpeakeasyMetadata()
    @Expose({ name: "meld_group" })
    meldGroup: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notify_owner" })
    notifyOwner?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "open_work_entry" })
    openWorkEntry: string;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_acknowledged" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    ownerApprovalAcknowledged?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_comment" })
    ownerApprovalComment?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_completed_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    ownerApprovalCompletedDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_dollar_amount" })
    ownerApprovalDollarAmount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_request_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    ownerApprovalRequestDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_request_message" })
    ownerApprovalRequestMessage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approval_status" })
    ownerApprovalStatus?: OwnerApprovalStatusEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_approved_by" })
    ownerApprovedBy?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "owner_notified_assignment" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    ownerNotifiedAssignment?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "parent" })
    parent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "pets" })
    pets?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority?: PriorityEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "project" })
    project?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "prop" })
    @Type(() => MeldListViewProperty)
    prop?: MeldListViewProperty;

    @SpeakeasyMetadata()
    @Expose({ name: "reason_cannot_complete" })
    reasonCannotComplete?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "recurring_meld" })
    recurringMeld?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "reference_id" })
    referenceId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "reviewing_tenant" })
    reviewingTenant?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "started" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    started?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: Status5c6Enum;

    @SpeakeasyMetadata({ elemType: WriteableTag })
    @Expose({ name: "tags" })
    @Type(() => WriteableTag)
    tags?: WriteableTag[];

    @SpeakeasyMetadata()
    @Expose({ name: "tenant_canceller" })
    tenantCanceller?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "tenant_presence_required" })
    tenantPresenceRequired?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "tenant_rating" })
    tenantRating?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "tenant_review" })
    tenantReview?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tenant_review_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    tenantReviewDate?: Date;

    @SpeakeasyMetadata({ elemType: Tenant })
    @Expose({ name: "tenants" })
    @Type(() => Tenant)
    tenants?: Tenant[];

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    @Type(() => MeldListViewUnit)
    unit?: MeldListViewUnit;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;

    @SpeakeasyMetadata({ elemType: VendorAssignmentRequest })
    @Expose({ name: "vendor_assignment_requests" })
    @Type(() => VendorAssignmentRequest)
    vendorAssignmentRequests?: VendorAssignmentRequest[];

    @SpeakeasyMetadata()
    @Expose({ name: "vendor_closer" })
    @Type(() => MeldSerializerListVendorCloser)
    vendorCloser: MeldSerializerListVendorCloser;

    @SpeakeasyMetadata()
    @Expose({ name: "vendorappointment" })
    @Type(() => MeldSerializerListVendorappointment)
    vendorappointment: MeldSerializerListVendorappointment;

    @SpeakeasyMetadata()
    @Expose({ name: "work_category" })
    workCategory: WorkCategoryEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "work_location" })
    workLocation: string;
}
