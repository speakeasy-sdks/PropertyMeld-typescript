/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class WorkEntrySerializerDetail extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "agent" })
    agent: number;

    @SpeakeasyMetadata()
    @Expose({ name: "checkin" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    checkin?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "checkout" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    checkout?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "hours" })
    hours?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "long_description" })
    longDescription?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    meld: number;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "updater" })
    updater: number;
}
