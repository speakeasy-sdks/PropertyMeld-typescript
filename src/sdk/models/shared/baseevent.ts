/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class BaseEvent extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "classification" })
    classification?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dtend" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dtend?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "dtstart" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dtstart: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "dur_day" })
    durDay?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "dur_week" })
    durWeek?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "duration" })
    duration?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "latitude" })
    latitude?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "longitude" })
    longitude?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "organizer" })
    organizer?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "rrule" })
    rrule?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}
