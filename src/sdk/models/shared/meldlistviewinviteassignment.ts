/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InviteGroup } from "./invitegroup";
import { Expose, Transform, Type } from "class-transformer";

export class MeldListViewInviteAssignment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "accepted" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    accepted?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "canceled" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    canceled?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "invite_group" })
    @Type(() => InviteGroup)
    inviteGroup: InviteGroup;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    meld: number;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}
