/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BasePayment } from "./basepayment";
import { MeldInvoiceListMeld } from "./meldinvoicelistmeld";
import { MeldInvoiceListVendor } from "./meldinvoicelistvendor";
import { Status09fEnum } from "./status09fenum";
import { Expose, Transform, Type } from "class-transformer";

export class MeldInvoiceSerializerDetail extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "attachment_url" })
    attachmentUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "management_agent" })
    managementAgent?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "meld" })
    @Type(() => MeldInvoiceListMeld)
    meld: MeldInvoiceListMeld;

    @SpeakeasyMetadata()
    @Expose({ name: "notes" })
    notes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payment" })
    @Type(() => BasePayment)
    payment: BasePayment;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_requested" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    paymentRequested?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: Status09fEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "vendor" })
    @Type(() => MeldInvoiceListVendor)
    vendor: MeldInvoiceListVendor;
}
