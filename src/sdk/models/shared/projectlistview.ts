/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectListViewSerializerManagementAgent } from "./projectlistviewserializermanagementagent";
import { ProjectListViewSerializerUnit } from "./projectlistviewserializerunit";
import { ProjectTypeEnum } from "./projecttypeenum";
import { Expose, Transform, Type } from "class-transformer";

export class ProjectListView extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: ProjectListViewSerializerManagementAgent })
    @Expose({ name: "coordinators" })
    @Type(() => ProjectListViewSerializerManagementAgent)
    coordinators: ProjectListViewSerializerManagementAgent[];

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "due_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dueDate: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "melds" })
    melds: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "project_type" })
    projectType?: ProjectTypeEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "start_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    startDate: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    @Type(() => ProjectListViewSerializerUnit)
    unit?: ProjectListViewSerializerUnit;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}
