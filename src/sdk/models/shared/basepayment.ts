/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MethodEnum } from "./methodenum";
import { Expose, Transform } from "class-transformer";

export class BasePayment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: string;

    @SpeakeasyMetadata()
    @Expose({ name: "amount_refunded" })
    amountRefunded?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "check_no" })
    checkNo?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "create_by" })
    createBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: MethodEnum;

    @SpeakeasyMetadata()
    @Expose({ name: "notes" })
    notes?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "stripe_charge_id" })
    stripeChargeId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "update_by" })
    updateBy?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updated: Date;
}
